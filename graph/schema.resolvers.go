package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.45

import (
	"FullCycleCleanArchitecture/graph/model"
	"context"
	"fmt"
)

// CreateProduct is the resolver for the CreateProduct field.
func (r *mutationResolver) CreateProduct(ctx context.Context, input model.NewProduct) (*model.Product, error) {
	panic(fmt.Errorf("not implemented: CreateProduct - CreateProduct"))
}

// CreateOrder is the resolver for the CreateOrder field.
func (r *mutationResolver) CreateOrder(ctx context.Context, input model.NewOrder) (*model.Order, error) {
	panic(fmt.Errorf("not implemented: CreateOrder - CreateOrder"))
}

// Product is the resolver for the product field.
func (r *queryResolver) Product(ctx context.Context) ([]*model.Product, error) {
	panic(fmt.Errorf("not implemented: Product - product"))
}

// Order is the resolver for the order field.
func (r *queryResolver) Order(ctx context.Context) ([]*model.Order, error) {
	panic(fmt.Errorf("not implemented: Order - order"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
